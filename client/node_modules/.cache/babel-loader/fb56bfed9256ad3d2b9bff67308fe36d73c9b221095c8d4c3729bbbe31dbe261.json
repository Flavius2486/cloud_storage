{"ast":null,"code":"/* eslint-disable */import { createRouter, createWebHistory } from \"vue-router\";\nimport store from \"../store/index\";\nimport config from \"../config.json\";\nimport axios from \"axios\";\nconst routes = [{\n  path: \"/login\",\n  name: \"login\",\n  component: () => import(\"../views/LoginView.vue\")\n}, {\n  path: \"/dashboard\",\n  name: \"dashboard\",\n  component: () => import(\"../views/DashboardView.vue\"),\n  meta: {\n    requiresAuth: true\n  }\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\nrouter.beforeEach(async (to, from, next) => {\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    axios.get(`${config.BASE_URL}/login`, {\n      headers: {\n        Authorization: `Bearer ${$cookies.get(\"jwt\")}`\n      }\n    }).then(response => {\n      if (response.data.auth) {\n        return next();\n      }\n      return next(\"/login\");\n    }).catch(err => {\n      throw err;\n    });\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","store","config","axios","routes","path","name","component","meta","requiresAuth","router","history","process","env","BASE_URL","beforeEach","to","from","next","matched","some","record","get","headers","Authorization","$cookies","then","response","data","auth","catch","err"],"sources":["/home/flavius/Public/projects/personal_cloud_storage/client/src/router/index.js"],"sourcesContent":["/* eslint-disable */ import {\n  createRouter,\n  createWebHistory,\n} from \"vue-router\";\nimport store from \"../store/index\";\nimport config from \"../config.json\";\nimport axios from \"axios\";\n\nconst routes = [\n  {\n    path: \"/login\",\n    name: \"login\",\n    component: () => import(\"../views/LoginView.vue\"),\n  },\n  {\n    path: \"/dashboard\",\n    name: \"dashboard\",\n    component: () => import(\"../views/DashboardView.vue\"),\n    meta: {\n      requiresAuth: true,\n    },\n  },\n];\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes,\n});\n\nrouter.beforeEach(async (to, from, next) => {\n  if (to.matched.some((record) => record.meta.requiresAuth)) {\n    axios\n      .get(`${config.BASE_URL}/login`, {\n        headers: {\n          Authorization: `Bearer ${$cookies.get(\"jwt\")}`,\n        },\n      })\n      .then((response) => {\n        if (response.data.auth) {\n          return next();\n        }\n        return next(\"/login\");\n      })\n      .catch((err) => {\n        throw err;\n      });\n  }else{\n    next();\n  }\n});\n\nexport default router;\n"],"mappings":"AAAA,oBAAqB,SACnBA,YAAY,EACZC,gBAAgB,QACX,YAAY;AACnB,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAOC,MAAM,MAAM,gBAAgB;AACnC,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,wBAAwB;AAClD,CAAC,EACD;EACEF,IAAI,EAAE,YAAY;EAClBC,IAAI,EAAE,WAAW;EACjBC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,4BAA4B,CAAC;EACrDC,IAAI,EAAE;IACJC,YAAY,EAAE;EAChB;AACF,CAAC,CACF;AAED,MAAMC,MAAM,GAAGX,YAAY,CAAC;EAC1BY,OAAO,EAAEX,gBAAgB,CAACY,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EAC/CV;AACF,CAAC,CAAC;AAEFM,MAAM,CAACK,UAAU,CAAC,OAAOC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EAC1C,IAAIF,EAAE,CAACG,OAAO,CAACC,IAAI,CAAEC,MAAM,IAAKA,MAAM,CAACb,IAAI,CAACC,YAAY,CAAC,EAAE;IACzDN,KAAK,CACFmB,GAAG,CAAE,GAAEpB,MAAM,CAACY,QAAS,QAAO,EAAE;MAC/BS,OAAO,EAAE;QACPC,aAAa,EAAG,UAASC,QAAQ,CAACH,GAAG,CAAC,KAAK,CAAE;MAC/C;IACF,CAAC,CAAC,CACDI,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAIA,QAAQ,CAACC,IAAI,CAACC,IAAI,EAAE;QACtB,OAAOX,IAAI,CAAC,CAAC;MACf;MACA,OAAOA,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC,CAAC,CACDY,KAAK,CAAEC,GAAG,IAAK;MACd,MAAMA,GAAG;IACX,CAAC,CAAC;EACN,CAAC,MAAI;IACHb,IAAI,CAAC,CAAC;EACR;AACF,CAAC,CAAC;AAEF,eAAeR,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}